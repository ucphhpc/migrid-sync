# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches:
      - edge
      - main
  pull_request:
    branches:
      - edge
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read

jobs:
  lint-python2-rocky8:
    name: Sanity Check Python Code on Rocky8 with Linters
    runs-on: ubuntu-latest
    container:
      image: rockylinux/rockylinux:8
    steps:
      - name: Set up Git, FindUtils and Python 2.7 with DNF and link it to default
        run: |
          dnf install -y git findutils python2 python2-pip
      - name: Install dependencies
        run: |
          python2 -m pip install --upgrade pip
          pip2 install flake8 pylint #pytest
          if [ -f requirements.txt ]; then pip2 install -r requirements.txt; fi
      # We need git installed to get a full repo clone rather than unpacked archive
      - name: Check out source repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # This is necessary to get the commits
      - name: Lint with pylint
        run: |
          # NOTE: we only run pylint error check for changed python files to limit noise
          # NOTE: perms are not right inside container so repeat what checkout module does.
          git config --global --add safe.directory "$PWD"
          echo "Lint changed code files: $(git diff --diff-filter=ACMRTB --name-only HEAD^1 -- | grep -E '\.py$' | grep -E -v '^tests/.*')"
          # NOTE: unit tests are only targetted at py3 so skip here
          git diff --diff-filter=ACMRTB --name-only HEAD^1 -- | grep -E '\.py$' | grep -E -v '^tests/.*' | xargs -r pylint -E
      - name: Lint with flake8
        run: |
          # TODO: fix unittest dir and remove from excludes
          # TODO: fix or migrate legacy grsfs-fuse dir and remove from excludes
          # TODO: should tests be included here - currently fail on py3-only FileNotFoundError, etc.
          # TODO: fix e.g. '`global logger` is unused' and remove F824 from ignores
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --exclude=tests,state,envhelp,fixture,output,unittest,grsfs-fuse,irclib.py,seafile-seahub_settings-template.py --count --select=E9,F63,F7,F82 --ignore=F824 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --exclude=tests,state,envhelp,fixture,output,unittest,grsfs-fuse,vm-proxy,irclib.py,seafile-seahub_settings-template.py --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          # NOTE: for interactive clean up one can use current ignores
          # E501 Ignore long lines, E402 imports below top, E722 bare except,
          # F401 unused imports, F502 explicit list in str expand, F841 unused var,
          # E721 compare type instead of isinstance, W293 blank line with space,
          # C901 too complex get
          #flake8 mig --exclude=unittest,grsfs-fuse,vm-proxy,irclib.py,seafile-seahub_settings-template.py --ignore=E501,E402,E722,F401,F502,E713,F841,C901 --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      # TODO: prepare and enable pytest
      #- name: Test with pytest
      #  run: |
      #    pytest
