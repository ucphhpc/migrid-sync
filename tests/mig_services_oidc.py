from tests.support import MigTestCase, testmain

from mig.server.createuser import _main as createuser
from mig.services.oidc import _create_service
from mig.shared.useradm import _USERADM_CONFIG_DIR_KEYS


class TestCase(MigTestCase):
    TEST_USER_DN = '/C=DK/ST=NA/L=NA/O=Test Org/OU=NA/CN=Test User/emailAddress=user@example.com'

    def _provide_configuration(self):
        return 'testconfig'

    def before_each(self):
        configuration = self.configuration
        test_state_path = configuration.state_path

        for config_key in _USERADM_CONFIG_DIR_KEYS:
            dir_path = getattr(configuration, config_key)[0:-1]
            try:
                shutil.rmtree(dir_path)
            except:
                pass

    def ensure_userdb_with_user(self):
        args = [
            "Test User",
            "Test Org",
            "NA",
            "DK",
            "user@example.com",
            "This is the create comment",
            "password"
        ]
        print("")  # acount for output generated by the logic
        createuser(self.configuration, args, default_renew=True)

    def test_server_creation_loads_user_db(self):
        self.ensure_userdb_with_user()

        server, request_validator = _create_service(self.configuration)

        self.assertIsInstance(request_validator._user_db, dict)
        self.assertIn(self.TEST_USER_DN, request_validator._user_db)


if __name__ == '__main__':
    testmain()
