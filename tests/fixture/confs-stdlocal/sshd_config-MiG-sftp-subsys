#	$OpenBSD: sshd_config,v 1.93 2014/01/10 05:59:19 djm Exp $

# This is the OpenSSH MiG SFTP subsystem server configuration file.  See
# sshd_config(5) for more information.

# It is limited to providing SFTP access for MiG virtual user acounts and
# should run in parallel to the system-wide sshd used for interactive logins
# to the system.

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

# If you want to change the port on a SELinux system, you have to tell
# SELinux about this change.
# semanage port -a -t ssh_port_t -p tcp #PORTNUMBER
#
# NOTE: you may need to fit ListenAddress and Port if you want to run a native
#       openssh for interactive system logins along with the MiG standalone 
#       and/or openssh+subsys SFTP-only server.
Port 22
#AddressFamily any
ListenAddress 

# The default requires explicit activation of protocol 1
#Protocol 2

# HostKey for protocol version 1
#HostKey /etc/ssh/ssh_host_key
# HostKeys for protocol version 2
# NOTE: use MiG I/O RSA key as host key - we don't have an ed25519 key
#HostKey /etc/ssh/ssh_host_rsa_key
HostKey /home/mig/certs//server.key
#HostKey /etc/ssh/ssh_host_dsa_key
#HostKey /etc/ssh/ssh_host_ecdsa_key
#HostKey /etc/ssh/ssh_host_ed25519_key

# IMPORTANT: these are *generated* hardened values based on generateconf
# invocation. Any permanent changes need to be made there.
KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group16-sha512
Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com

# Logging
# obsoletes QuietMode and FascistLogging
#SyslogFacility AUTH
SyslogFacility AUTHPRIV
# NOTE: we crank up log verbosity for better traces
# LogLevel VERBOSE logs user's key fingerprint on login. 
# Needed to have a clear audit track of which key was used to log in.
#LogLevel INFO
LogLevel VERBOSE

# Authentication:

# NOTE: lowered from 120 to 30 seconds to counter slow script kiddie attacks.
LoginGraceTime 30s
PermitRootLogin no
#PermitRootLogin without-password 
#StrictModes yes
# NOTE: we make password guessing harder by lowering from 6 to 3 tries
MaxAuthTries 3
#MaxSessions 10

#RSAAuthentication yes
#PubkeyAuthentication yes

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
AuthorizedKeysFile	.ssh/authorized_keys

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#RhostsRSAAuthentication no
# similar for protocol version 2
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# RhostsRSAAuthentication and HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# NOTE: we leave password logins enabled for MiG user sftp
# To disable tunneled clear text passwords, change to no here!
PasswordAuthentication yes
#PermitEmptyPasswords no

# Change to no to disable s/key passwords
#ChallengeResponseAuthentication yes
ChallengeResponseAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no
#KerberosUseKuserok yes

# GSSAPI options
#GSSAPIAuthentication no
#GSSAPICleanupCredentials yes
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no
#GSSAPIEnablek5users no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
# WARNING: 'UsePAM no' is not supported in Red Hat Enterprise Linux and may cause several
# problems.
UsePAM yes

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
#X11Forwarding no
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes
#PrintMotd yes
#PrintLastLog yes
#TCPKeepAlive yes
#UseLogin no
#UsePrivilegeSeparation sandbox
#PermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#ShowPatchLevel no
#UseDNS yes
#PidFile /var/run/sshd.pid
# NOTE: maybe necessary to increase the allowed number of concurrent
#       unauthenticated connections here
MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# Accept locale-related environment variables
# NOTE: no point in allowing user-provided environment variables here
#AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
#AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
#AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE
#AcceptEnv XMODIFIERS

# override default of no subsystems
Subsystem   sftp    /home/mig/mig/server/sftp_subsys.py

# IMPORTANT: please make sure to also restrict any native sshd to deny login
#            from ALL users entering as user testuser or group testgroup with
#            DenyUsers testuser
#            DenyGroups testgroup

# NOTE: Only allow MiG users on this sshd instance, and sftp-only access
AllowGroups testgroup
Match Group testgroup
    # Look for public keys in standard authorized_keys file in home and 
    # optionally in job and jupyter session mount key location if enabled.
    AuthorizedKeysFile    %h/.ssh/authorized_keys
    # NOTE: chroot is already handled in our paramiko subsystem
    #ChrootDirectory       %h
    # NOTE: we force our paramiko subsystem for sftp-only access
    ForceCommand           /home/mig/mig/server/sftp_subsys.py
    # Lock down any other uses to be on the safe side
    AllowTcpForwarding no
    PermitTTY no
    X11Forwarding no
    PermitTunnel no
    PermitUserRC no
