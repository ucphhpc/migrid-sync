# Custom MiG network daemon filter to detect attempts to brute-force guess user passwords 
# and common scanning bots

[DEFAULT]
normal = ^.* WARNING IP: <HOST>, Protocol: .+, Type: .+, Username: .+, Message: Exceeded rate limit$

# Authlog handles password crack detection
pw_crack = ^.* CRITICAL IP: <HOST>, Protocol: .+, Type: .+, Username: .+, Message: (Crack username detected|Abuse limit reached)$

# Repeated native sftp handshake errors from weak client security indicate a scan bot
handshake = ^.* WARNING client negotiation errors for \('<HOST>', [0-9]+\): (Incompatible ssh (peer|server) \(no acceptable (kex algorithm|ciphers|macs|host key)\))?$

# Common web vulnerability scans are a clear sign of malice
webscan = ^.* ERROR got path from <HOST> with invalid root: /home/mig/state/webserver_home/((HNAP1|GponForm|provisioning|provision|prov|polycom|yealink|CertProv|phpmyadmin|admin|cfg|wp|wordpress|cms|blog|old|new|test|dev|tmp|temp|remote|mgmt|properties|authenticate|tmui|ddem|a2billing|vtigercrm|secure|rpc|recordings|dana-na)(/.*|)|.*(Login|login|logon|configuration|header|admin|index)\.(php|jsp|asp)|(api/v1/pods|Telerik.Web.UI.WebResource.axd))$


[INCLUDES]
before = common.conf

[Definition]
failregex = %(normal)s
#ignoreregex =

[Init]
maxlines = 1
# Use pyinotify or poll on native log file rather than systemd journal
#journalmatch = _SYSTEMD_UNIT=migrid.service + _COMM=grid_webdavs.py
journalmatch = 
