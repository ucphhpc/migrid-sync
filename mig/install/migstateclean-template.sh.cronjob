#!/bin/sh
#
# Clean up stale user/job files and links in state dir
# Includes notification about pending user account requests
#
# PLEASE NOTE: all mRSL files should be saved for auditing purposes
#
# IMPORTANT: if placed in /etc/cron.X the script filename must be 
# changed to something consisting entirely of upper and lower case 
# letters, digits, underscores, and hyphens. I.e. if the script name 
# contains e.g. a period, '.', it will be silently ignored! 
# This is a limitation on the run-parts wrapper used by cron 
# (see man run-parts for the rationale behind this).

# Modify this base dir variable to fit actual state dir location in your setup
STATEDIR="__MIG_STATE__"
VERBOSE=__CRON_VERBOSE_CLEANUP__
REQCLEANUP=__CRON_REQ_CLEANUP__
JOBCLEANUP=__CRON_JOB_CLEANUP__
TFCLEANUP=__CRON_TWOFACTOR_CLEANUP__
EVTCLEANUP=__CRON_EVENT_CLEANUP__
SESSCLEANUP="__CRON_SESSION_CLEANUP__"

logmsg() {
    if [ $VERBOSE -eq 1 ]; then
        echo $@
    fi
}


if [ $REQCLEANUP -eq 1 ]; then
    logmsg "= Pending Account Requests ="
    # Account req files should be accepted or rejected - never left ignored
    max_days=2
    for name in $STATEDIR/user_pending; do
        logmsg "Checking account request files older than $max_days days from $name"
        su - mig -c "find $name -xdev -maxdepth 1 -mtime +${max_days} -type f | xargs -n1 grep -H emailAddress"
    done
fi

if [ $JOBCLEANUP -eq 1 ]; then
    logmsg ""
    logmsg "= Stale File Removal ="
    # Clean up after jobs if they haven't done so themselves within a month.
    # Don't delete files like pickled queues and last start marker, however.
    max_days=30
    for name in $STATEDIR/mig_system_files/{tmp,no_grid_jobs}* $STATEDIR/sessid_to_mrsl_link_home $STATEDIR/webserver_home; do
        # Skip patterns without match to avoid errors
        echo "$name" | grep -q '*' && continue
        logmsg "Deleting files older than $max_days days from $name"
        su - mig -c "find $name -xdev -maxdepth 1 -mtime +${max_days} -type f | xargs -n1 rm -f "
    done

    # Empty job cruft can be removed within a week
    max_days=7
    for name in $STATEDIR/user_home/no_grid_jobs_in_grid_scheduler; do
        logmsg "Deleting files older than $max_days days from $name"
        su - mig -c "find $name -xdev -maxdepth 1 -mtime +${max_days} -type f | xargs -n1 rm -f " 
    done
fi

if [ $TFCLEANUP -eq 1 ]; then
    # 2-factor session files expire within a day and can then safely be removed
    max_days=1
    for name in $STATEDIR/twofactor_home; do
        logmsg "Deleting files and symlinks older than $max_days days from $name"
        su - mig -c "find $name -xdev -maxdepth 1 -mtime +${max_days} -type f | xargs -n1 rm -f " 
        su - mig -c "find $name -xdev -maxdepth 1 -mtime +${max_days} -xtype l | xargs -n1 rm -f " 
    done
fi

if [ $EVTCLEANUP -eq 1 ]; then
    # Delete and trash event traces are dumped in $STATEDIR/events_home and can
    # grow huge. They are not strictly needed but we compress and keep them.
    max_days=30
    for name in $STATEDIR/events_home; do
        logmsg "Packing event trace files older than $max_days days from $name"
        su - mig -c "find $name -xdev -maxdepth 1 -mtime +${max_days} -type f -regex '.*-[0-9.]+$' -exec /bin/gzip \{\} \;"
    done
fi

if [ -n "$SESSCLEANUP" ]; then
    # Run session cleanup script to remove dead login sessions from griddaemon
    # session tracking in case of unclean session shutdowns.
    logmsg "Cleaning up dead client sessions in griddaemon session tracking for $SESSCLEANUP"
    su - mig -c "PYTHONPATH=__MIG_BASE__ mig/server/cleansessions.py $SESSCLEANUP"
fi
exit 0
